@using GridMvc.Html
@model ClinicSystem.WebApplication.Models.ExaminationIndexViewModel

@{
    ViewBag.Title = "Wizyty i badania";
}

<h2>@ViewBag.Title</h2>
<p class="text-success">@ViewBag.StatusMessage</p>
<div>
    <h4>Zarządzanie danymi wizyt i badań</h4>
    <hr />
    <dl class="dl-horizontal">
        @if (User.IsInRole("DOCTOR") || User.IsInRole("ADMINISTRATOR") || User.IsInRole("MANAGER"))
        {
            <dd>
                <br />
            </dd>
            if (!string.IsNullOrEmpty(Model.UnitName))
            {
                <dt>Wizyty na oddziale @Model.UnitName:</dt>
            }
            else
            {
                <dt>Wizyty na wszystkich oddziałach:</dt>
            }
            <dd>
                @if (Model.UnitVisitDtos.Any())
                {
                    @Html.Grid(Model.UnitVisitDtos).Columns(columns =>
               {
                   columns.Add(c => c.DateFrom).Titled("Data od").Format("{0:dd.MM.yyyy HH:mm}");
                   columns.Add(c => c.DateTo).Titled("Data do").Format("{0:dd.MM.yyyy HH:mm}");
                   columns.Add(c => c.PersonName).Titled("Pacjent");
                   columns.Add(c => c.PersonPesel).Titled("PESEL");
                   columns.Add(c => c.PersonAddress).Titled("Adres");
                   columns.Add().Sanitized(false).Encoded(false).RenderValueAs(visit => Html.ActionLink("Szczegóły", "VisitDetails", new { visitId = visit.Id }, null).ToHtmlString());
               }).WithPaging(10).Sortable(true).Filterable(true)
                }
                else
                {
                    <p>Brak</p>
                }
            </dd>
        }
        else if (User.IsInRole("PATIENT"))
        {
            <dt>Moje wizyty:</dt>
            <dd>
                @if (Model.PatientVisitDtos.Any())
                {
                    @Html.Grid(Model.PatientVisitDtos).Columns(columns =>
                    {
                        columns.Add(c => c.DateFrom).Titled("Data od");
                        columns.Add(c => c.DateTo).Titled("Data do");
                        columns.Add(c => c.PersonPesel).Titled("PESEL");
                        columns.Add(c => c.PersonAddress).Titled("Adres");
                        columns.Add().Sanitized(false).Encoded(false).RenderValueAs(visit => Html.ActionLink("Szczegóły", "VisitDetails", new { visitId = visit.Id }, null).ToHtmlString());
                    }).WithPaging(10).Sortable(true).Filterable(true)
                }
                else
                {
                    <p>Brak</p>
                }
            </dd>
        }
        <dd>
            <br />
        </dd>
        <dt>Moje diagnozy:</dt>
        <dd>
            @if (Model.PatientDiagnoses.Any())
            {
                @Html.Grid(Model.PatientDiagnoses.ToList()).Columns(columns =>
                {
                    columns.Add(c => c.DIAGNOSE).Titled("Diagnoza");
                    columns.Add(c => c.DISEASE.CODE).Titled("Choroba");
                    columns.Add(c => c.PATIENT_VISIT.CLINIC.NAME).Titled("Nazwa przychodni");
                    columns.Add(c => c.PATIENT_VISIT.CLINIC.ADDRESS).Titled("Adres przychodni");
                }).WithPaging(10).Sortable(true).Filterable(true)
            }
            else
            {
                <p>Brak</p>
            }
        </dd>
    </dl>
</div>
